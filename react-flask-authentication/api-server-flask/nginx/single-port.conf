# SINGLE PORT NGINX CONFIGURATION
# This configuration is optional - Flask can serve directly without nginx
# Use this for production features like SSL termination, caching, or load balancing

upstream cutting_app_single_port {
    server cutting_app_single_port:5005;
}

server {
    listen 5000;
    server_name localhost gab-navint01p.csg1.sys.calzedonia.com 172.27.57.210;

    # Enable detailed logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log debug;

    # Serve everything from Flask (both frontend and API)
    location / {
        # Add debug headers
        add_header X-Debug-Info "Single port nginx proxy" always;
        
        # Proxy to Flask application
        proxy_pass http://cutting_app_single_port;
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Handle WebSocket upgrades (if needed for future features)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Increase timeouts for large requests
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Optional: Serve static files directly from nginx for better performance
    # Uncomment if you want nginx to serve static files instead of Flask
    # location /static/ {
    #     alias /app/static/;
    #     expires 1y;
    #     add_header Cache-Control "public, immutable";
    # }
    
    # Optional: Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
}
